[package]
name = "vcmi_launcher_v2"
version = "1.4.0"
edition = "2021"
resolver = "2"
build = "build.rs"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
log = "0.4"
image = { version = "0.24", default-features = false, features = [
    "ico",
    "png",
] }
egui = { version = "0.23" }
egui_extras = { version = "0.23", features = ["file", "image"] }
eframe = { version = "0.23", default-features = false, features = [
    "accesskit",
    "persistence",
    # "glow",
    "wgpu",
    "android-game-activity",
] }
# egui-toast = "0.9.0"                        # in app notifications
egui-toast = { git = "https://github.com/PingPongun/egui-toast.git", branch = "egui_23" } # in app notifications
egui_struct = "0.3"                                                                       #generate UI from struct
egui_reqwest_loader = { git = "https://github.com/PingPongun/egui_reqwest_loader.git" }

winit = { version = "0.28.6", features = ["android-game-activity"] }
rfd = { version = "0.12", optional = true }                          # file dialog

zip = { version = "0.6.6", default-features = false, features = [
    "deflate",
    "bzip2",
    "zstd",
] }
rust-i18n = { git = "https://github.com/PingPongun/rust-i18n.git" }
reqwest = "0.11" # http
tokio = { version = "1.34", features = [
    "rt-multi-thread",
    "parking_lot",
] } # async

#Serialization/deserialization
serde = { version = "1", features = ["derive"] }
serde_json = "1"
nu-json = "0.86"
serde_plain = "1"
serde-enum-str = "0.4"

strum = { version = "0.25", features = ["derive"] } # enum derive macros
atomic_enum = "0.2"
directories = "5"
dunce = "1.0"                                       #canonicalize paths
sys-locale = "0.3"                                  #detect system locale
lazy_static = "1.4"
# font-kit = "0.11.0" #load system fonts
educe = { version = "0.4", default-features = false, features = [
    "Default",
] } # struct derive macros
fs_extra = "1.3" # copy dirs
os_info = "3.7"
fern = "0.6" #logging crate
humantime = "2"
indexmap = "2" #ordered hash map
parking_lot = "0.12" #synchronization primitives
ahash = { version = "0.8", default-features = false, features = [
    "std",
] } #const hasher
anyhow = "1" #single error type
futures = "0.3" #async

[target.'cfg(target_os = "android")'.dependencies]
android_logger = "0.13"
jni = { version = "0.21", features = ["invocation"] }
ndk-context = "0.1"

[build-dependencies]
embed-resource = "2.3"
cc = "1"
git-sha1 = { version = "1.1", optional = true }

# [patch.crates-io]
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# egui_extras = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

[features]
default = ["enable_gitversion"]
desktop = ["dep:rfd"]
enable_gitversion = ["dep:git-sha1"]

[lib]
path = "src/main.rs"
name = "vcmilauncherv2lib"
crate_type = ["cdylib", "staticlib"]

[[bin]]
path = "src/main.rs"
name = "vcmilauncherv2"
required-features = ["desktop"]


[profile.release]
opt-level = 3
lto = "thin"      # Enable link time optimization
panic = 'abort'
strip = true      # Automatically strip symbols from the binary.
codegen-units = 1 # Reduce parallel code generation units

[profile.MinSizeRel]
inherits = "release"
opt-level = "s"
lto = "thin"
panic = 'abort'
strip = true
codegen-units = 1

[profile.RelWithDebInfo]
inherits = "dev"
opt-level = 2            #
debug = true
debug-assertions = false #
overflow-checks = false  #
lto = false
panic = 'abort'          # this reduces size significantly (~20%), but is it totally safe?
incremental = true
codegen-units = 32       #

[profile.MinSizeRel.package."*"]
opt-level = "s"


[package.metadata.i18n]
# The available locales for your application, default: ["en"].
available-locales = ["en", "zh", "es", "ru", "pl", "de", "fr", "uk", "cs"]

# The default locale, default: "english".
default-locale = "en"

# Path for your translations YAML file, default: "locales".
# This config for let `cargo i18n` command line tool know where to find your translations.
# You must keep this path same as the one you pass to method `rust_i18n::i18n!`.
load-path = "translate"

# Generate files with `_version: 1` format
generate-version = 1
# Choose generation file extension (yaml, json, toml)
generate-extension = "yaml"
